{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","className","s","descriptionBlock","photos","large","Preloader","Post","item","alt","message","likes","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElemetns","posts","map","p","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.170b35b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3HSVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3k2h5\",\"posts\":\"MyPosts_posts__1I6Fu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Db4yX\"};","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() =>{\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {!editMode &&\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n          </div>\r\n        }\r\n        {editMode &&\r\n          <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://i.imgur.com/RRUe0Mo.png\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <div><ProfileStatusWithHooks status={status} updateStatus={updateStatus}/></div>\r\n    </div>\r\n    </div>)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}><img src=\"https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg\" alt={\"\"}/>\r\n      {props.message}\r\n      <div>\r\n        <span>{props.likes} likes</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators\"\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    \r\n    /*shouldComponentUpdate(nextProps, nextState) {\r\n        debugger;\r\n      return nextProps != this.props || nextState != this.state;\r\n    }*/\r\n\r\n        let postsElemetns = props.posts.map(p =>\r\n            <Post message={p.message} key={p.id} likes={p.likes} />);\r\n\r\n\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n                <div className={s.posts}>\r\n                    {postsElemetns}\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText:state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n    dispatch(addPostActionCreator(newPostText));\r\n  }}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps )(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  \r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile={props.profile} \r\n       status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>)\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, updateStatus, getStatus } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n       updateStatus={this.props.updateStatus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, updateStatus, getStatus }),\r\n  withRouter,\r\n  //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}