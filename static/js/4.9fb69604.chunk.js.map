{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Message/Message.module.css","Components/Dialogs/Message/Message.jsx","Components/Dialogs/DiaologItem/DialogItem.jsx","Components/Dialogs/Dialogs.jsx","Components/hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","active","src","to","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","dialogs_form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,EAAI,qB,oBCArND,EAAOC,QAAU,CAAC,QAAU,2B,yGCUbC,EARC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACjBH,EAAMG,U,QCSAC,EAVI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKL,UAAWC,IAAEK,OAAS,IAAML,IAAEM,QACnC,yBAAKC,IAAI,yMACL,kBAAC,IAAD,CAASC,GAAIL,GAAOL,EAAMW,Q,kCCuBhCC,EAAcC,YAAiB,IAW/BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EATL,SAACf,GACpB,OACQ,0BAAMC,UAAWC,IAAEe,aAAcC,SAAUlB,EAAMmB,cACjD,6BAAK,kBAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBV,KAAK,iBAAiBW,UAAWC,IAC1EC,SAAU,CAACC,IAAUb,MACzB,6BAAK,oDAMFc,EAtCC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE1B,GAAIA,GAAI0B,EAAE1B,QACpF4B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASjC,QAASiC,EAAEjC,QAAS8B,IAAKG,EAAE9B,GAAIA,GAAI8B,EAAE9B,QAKzF,OACA,6BACI,yBAAKL,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEmC,cACbR,GAEL,yBAAK5B,UAAWC,IAAEiC,UACbD,IAGT,kBAACpB,EAAD,CAAqBI,SAbT,SAACoB,GACrBtC,EAAMuC,YAAYD,EAAOE,qB,wDCZzBC,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,S,OCgBRE,sBACXC,aAfkB,SAAClB,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDRR,SAACQ,GAAe,IAE1CC,EAFyC,iLAIvC,OAAKC,KAAKlD,MAAM0C,OACT,kBAACM,EAAcE,KAAKlD,OADI,kBAAC,IAAD,CAAUU,GAAI,eAJN,GAEfyC,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCI1DL,CAEOlB","file":"static/js/4.9fb69604.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3o2UJ\",\"dialogsItems\":\"Dialogs_dialogsItems__3WSsy\",\"active\":\"Dialogs_active__1Ad1_\",\"dialogs_form\":\"Dialogs_dialogs_form__3eTeN\",\"dialog\":\"Dialogs_dialog__38tmP\",\"a\":\"Dialogs_a__ZHmpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2Fn0K\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n        {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n        <img src=\"https://скачать-мессенджер.рф/wp-content/uploads/2018/07/kartinki-dlya-muzhchin-na-avatar-vatsap4.png\" />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DiaologItem/DialogItem'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\nimport { required, maxLengthCreator } from '../../utils/validators'\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id} />)\r\n    \r\n    let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageText);\r\n    }    \r\n        return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n            <form className={s.dialogs_form} onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder='Enter your message' name=\"newMessageText\" component={Textarea} \r\n                validate={[required, maxLength50]}/></div>\r\n            <div><button>Add message</button></div>\r\n            </form>)\r\n    }\r\n\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\nclass RedirectComponent extends React.Component {\r\n    render() {\r\n        if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n        return <Component {...this.props}/>\r\n    }\r\n  }\r\n  \r\nlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\nreturn ConnectedAuthRedirectComponent;\r\n}","import React from 'react'\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);\r\n\r\n"],"sourceRoot":""}